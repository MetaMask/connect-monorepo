{"version":3,"file":"networks.cjs","sourceRoot":"","sources":["../../src/constants/networks.ts"],"names":[],"mappings":";;;AAEa,QAAA,iBAAiB,GAAG;IAChC,kBAAkB,EAAE,UAAU;IAC9B,eAAe,EAAE,cAAc;IAC/B,cAAc,EAAE,cAAc;IAC9B,2BAA2B,EAAE,cAAc;IAC3C,WAAW,EAAE,WAAW;IACxB,YAAY,EAAE,WAAW;IACzB,iBAAiB,EAAE,YAAY;IAC/B,oBAAoB,EAAE,YAAY;IAClC,cAAc,EAAE,aAAa;IAC7B,gBAAgB,EAAE,yCAAyC;CAClD,CAAC;AAEJ,MAAM,cAAc,GAAG,CAAC,OAAoB,EAAU,EAAE;IAC9D,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,yBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;IAClF,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;AACnC,CAAC,CAAC;AAHW,QAAA,cAAc,kBAGzB","sourcesContent":["import type { CaipChainId } from '@metamask/utils';\n\nexport const FEATURED_NETWORKS = {\n\t'Ethereum Mainnet': 'eip155:1',\n\t'Linea Mainnet': 'eip155:59144',\n\t'Arbitrum One': 'eip155:42161',\n\t'Avalanche Network C-Chain': 'eip155:43114',\n\t'BNB Chain': 'eip155:56',\n\t'OP Mainnet': 'eip155:10',\n\t'Polygon Mainnet': 'eip155:137',\n\t'zkSync Era Mainnet': 'eip155:324',\n\t'Base Mainnet': 'eip155:8453',\n\t'Solana Mainnet': 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n} as const;\n\nexport const getNetworkName = (chainId: CaipChainId): string => {\n\tconst entry = Object.entries(FEATURED_NETWORKS).find(([_, id]) => id === chainId);\n\treturn entry ? entry[0] : chainId;\n};\n"]}