{"version":3,"file":"SDKProvider.cjs","sourceRoot":"","sources":["../../src/sdk/SDKProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport { createMetamaskSDK, type InvokeMethodOptions, type MultichainCore, type Scope, type SDKState, type SessionData } from '@metamask/multichain';\nimport type { CaipAccountId } from '@metamask/utils';\nimport type React from 'react';\nimport { createContext, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { METAMASK_PROD_CHROME_ID } from '../constants';\n\nconst SDKContext = createContext<\n\t| {\n\t\tsession: SessionData | undefined;\n\t\tstate: SDKState;\n\t\terror: Error | null;\n\t\tconnect: (scopes: Scope[], caipAccountIds: CaipAccountId[]) => Promise<void>;\n\t\tdisconnect: () => Promise<void>;\n\t\tinvokeMethod: (options: InvokeMethodOptions) => Promise<any>;\n\t}\n\t| undefined\n>(undefined);\n\nexport const SDKProvider = ({ children }: { children: React.ReactNode }) => {\n\tconst [state, setState] = useState<SDKState>('pending');\n\tconst [session, setSession] = useState<SessionData | undefined>(undefined);\n\tconst [error, setError] = useState<Error | null>(null);\n\n\tconst sdkRef = useRef<Promise<MultichainCore>>(undefined);\n\n\tuseEffect(() => {\n\t\tif (!sdkRef.current) {\n\t\t\tsdkRef.current = createMetamaskSDK({\n\t\t\t\tdapp: {\n\t\t\t\t\tname: 'playground',\n\t\t\t\t\turl: 'https://playground.metamask.io',\n\t\t\t\t},\n\t\t\t\tanalytics: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\ttransport: {\n\t\t\t\t\textensionId: METAMASK_PROD_CHROME_ID,\n\t\t\t\t\tonNotification: (notification: unknown) => {\n\t\t\t\t\t\tconst payload = notification as Record<string, unknown>;\n\t\t\t\t\t\tif (payload.method === 'wallet_sessionChanged' || payload.method === 'wallet_createSession' || payload.method === 'wallet_getSession') {\n\t\t\t\t\t\t\tsetSession(payload.params as SessionData);\n\t\t\t\t\t\t} else if (payload.method === 'stateChanged') {\n\t\t\t\t\t\t\tsetState(payload.params as SDKState);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, []);\n\n\tconst disconnect = useCallback(async () => {\n\t\ttry {\n\t\t\tif (!sdkRef.current) {\n\t\t\t\tthrow new Error('SDK not initialized');\n\t\t\t}\n\t\t\tconst sdkInstance = await sdkRef.current;\n\t\t\treturn sdkInstance.disconnect();\n\t\t} catch (error) {\n\t\t\tsetError(error as Error);\n\t\t}\n\t}, []);\n\n\tconst connect = useCallback(async (scopes: Scope[], caipAccountIds: CaipAccountId[]) => {\n\t\ttry {\n\t\t\tif (!sdkRef.current) {\n\t\t\t\tthrow new Error('SDK not initialized');\n\t\t\t}\n\t\t\tconst sdkInstance = await sdkRef.current;\n\t\t\tawait sdkInstance.connect(scopes, caipAccountIds);\n\t\t} catch (error) {\n\t\t\tsetError(error as Error);\n\t\t}\n\t}, []);\n\n\tconst invokeMethod = useCallback(async (options: InvokeMethodOptions) => {\n\t\ttry {\n\t\t\tif (!sdkRef.current) {\n\t\t\t\tthrow new Error('SDK not initialized');\n\t\t\t}\n\t\t\tconst sdkInstance = await sdkRef.current;\n\t\t\treturn sdkInstance.invokeMethod(options);\n\t\t} catch (error) {\n\t\t\tsetError(error as Error);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<SDKContext.Provider\n\t\t\tvalue={{\n\t\t\t\tsession,\n\t\t\t\tstate,\n\t\t\t\terror,\n\t\t\t\tconnect,\n\t\t\t\tdisconnect,\n\t\t\t\tinvokeMethod,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</SDKContext.Provider>\n\t);\n};\n\nexport const useSDK = () => {\n\tconst context = useContext(SDKContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useSDK must be used within a SDKProvider');\n\t}\n\treturn context;\n};\n"]}