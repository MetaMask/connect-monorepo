{"version":3,"file":"DynamicInputs.cjs","sourceRoot":"","sources":["../../src/components/DynamicInputs.tsx"],"names":[],"mappings":";;;;AAIA,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC3B,uCAAmB,CAAA;IACnB,mCAAe,CAAA;IACf,oDAAgC,CAAA;AACjC,CAAC,EAJW,gBAAgB,gCAAhB,gBAAgB,QAI3B;AASD,MAAM,aAAa,GAAiC,CAAC,EAAE,UAAU,EAAE,oBAAoB,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE;IACrH,OAAO,CACN,iCAAK,SAAS,EAAC,WAAW,aACzB,gCAAI,SAAS,EAAC,mCAAmC,aAAE,KAAK,UAAQ,EAChE,gCAAK,SAAS,EAAC,sBAAsB,YACnC,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;oBAChC,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACpD,OAAO,CACN,mCAAwC,SAAS,EAAC,qEAAqE,aACtH,kCACC,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,SAAS,EAClB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EACrE,SAAS,EAAC,4FAA4F,GACrG,EACF,iCAAM,SAAS,EAAC,2BAA2B,YAAE,MAAM,CAAC,IAAI,GAAQ,KAPrD,YAAY,MAAM,CAAC,KAAK,EAAE,CAQ9B,CACR,CAAC;gBACH,CAAC,CAAC,GACG,IACD,CACN,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["/* eslint-disable */\n\nimport type React from 'react';\n\nexport enum INPUT_LABEL_TYPE {\n\tADDRESS = 'Address',\n\tSCOPE = 'Scope',\n\tCAIP_ACCOUNT_ID = 'CAIP Address',\n}\n\ntype DynamicInputsProps = {\n\tinputArray: string[];\n\tavailableOptions: { name: string; value: string }[];\n\thandleCheckboxChange: (value: string, isChecked: boolean) => void;\n\tlabel: INPUT_LABEL_TYPE;\n};\n\nconst DynamicInputs: React.FC<DynamicInputsProps> = ({ inputArray, handleCheckboxChange, label, availableOptions }) => {\n\treturn (\n\t\t<div className=\"space-y-3\">\n\t\t\t<h3 className=\"text-lg font-medium text-gray-800\">{label}s:</h3>\n\t\t\t<div className=\"flex flex-wrap gap-4\">\n\t\t\t\t{availableOptions.map((option) => {\n\t\t\t\t\tconst isChecked = inputArray.includes(option.value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<label key={`checkbox-${option.value}`} className=\"flex items-center gap-2 p-2 hover:bg-gray-50 rounded cursor-pointer\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={isChecked}\n\t\t\t\t\t\t\t\tonChange={(e) => handleCheckboxChange(option.value, e.target.checked)}\n\t\t\t\t\t\t\t\tclassName=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"text-gray-700 select-none\">{option.name}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DynamicInputs;\n"]}