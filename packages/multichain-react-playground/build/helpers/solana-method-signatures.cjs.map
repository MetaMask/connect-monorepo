{"version":3,"file":"solana-method-signatures.cjs","sourceRoot":"","sources":["../../src/helpers/solana-method-signatures.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Commitment } from '@solana/web3.js';\nimport { Connection, PublicKey, SystemProgram, Transaction } from '@solana/web3.js';\n\nimport { FEATURED_NETWORKS } from '../constants/networks';\n\nconst SOLANA_RPC_CONFIG = {\n\tendpoints: [\n\t\t...(process.env.REACT_APP_HELIUS_API_KEY ? [`https://api.helius-rpc.com/?api-key=${process.env.REACT_APP_HELIUS_API_KEY}`] : []),\n\t\t'https://api.devnet.solana.com',\n\t\t'https://api.mainnet-beta.solana.com',\n\t],\n\tcommitment: 'confirmed' as Commitment,\n\tfallbackBlockhash: 'EETubP5AKHgjPAhzPAFcb8BAY1hMH639CWCFTqi3hq1k',\n};\n\nconst generateBase64Transaction = async (address: string) => {\n\tconst publicKey = new PublicKey(address);\n\t// biome-ignore lint/suspicious/noExplicitAny: Needed\n\tlet blockhash: any;\n\t// biome-ignore lint/suspicious/noExplicitAny: Needed\n\tlet error: any;\n\n\tfor (const endpoint of SOLANA_RPC_CONFIG.endpoints) {\n\t\ttry {\n\t\t\tconst connection = new Connection(endpoint, SOLANA_RPC_CONFIG.commitment);\n\t\t\tconst response = await connection.getLatestBlockhash();\n\t\t\tblockhash = response.blockhash;\n\t\t\tconsole.log(`Successfully connected to Solana RPC endpoint`);\n\t\t\tbreak;\n\t\t} catch (connectionError) {\n\t\t\tconsole.error(`Failed to connect to RPC endpoint:`, connectionError);\n\t\t\terror = connectionError;\n\t\t}\n\t}\n\n\tif (!blockhash) {\n\t\tconsole.warn('All RPC endpoints failed, using fallback blockhash');\n\t\tblockhash = SOLANA_RPC_CONFIG.fallbackBlockhash;\n\t\tconsole.error('Original error:', error);\n\t}\n\n\tconst transaction = new Transaction();\n\ttransaction.recentBlockhash = blockhash;\n\ttransaction.feePayer = publicKey;\n\n\ttransaction.add(\n\t\tSystemProgram.transfer({\n\t\t\tfromPubkey: publicKey,\n\t\t\ttoPubkey: publicKey,\n\t\t\tlamports: 1000,\n\t\t}),\n\t);\n\n\tconst serializedTransaction = transaction.serialize({\n\t\tverifySignatures: false,\n\t});\n\n\t// Convert Uint8Array to base64 safely to avoid call stack overflow\n\tconst uint8Array = new Uint8Array(serializedTransaction);\n\tlet binaryString = '';\n\tconst chunkSize = 2048; // Process in chunks to avoid call stack limits\n\n\tfor (let i = 0; i < uint8Array.length; i += chunkSize) {\n\t\tconst chunk = uint8Array.slice(i, i + chunkSize);\n\t\tbinaryString += String.fromCharCode.apply(null, Array.from(chunk));\n\t}\n\n\tconst base64Transaction = btoa(binaryString);\n\n\treturn base64Transaction;\n};\n\nconst stringToBase64 = (str: string): string => {\n\tconst encoder = new TextEncoder();\n\tconst bytes = encoder.encode(str);\n\treturn btoa(String.fromCharCode.apply(null, [...bytes]));\n};\n\nexport const generateSolanaMethodExamples = async (method: string, address: string) => {\n\tswitch (method) {\n\t\tcase 'signMessage':\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\taccount: { address },\n\t\t\t\t\tmessage: stringToBase64('Hello, world!'),\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'signTransaction':\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\taccount: { address },\n\t\t\t\t\ttransaction: await generateBase64Transaction(address),\n\t\t\t\t\tscope: FEATURED_NETWORKS['Solana Mainnet'],\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'signAllTransactions':\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\taccount: { address },\n\t\t\t\t\ttransactions: [await generateBase64Transaction(address), await generateBase64Transaction(address)],\n\t\t\t\t\tscope: FEATURED_NETWORKS['Solana Mainnet'],\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'signAndSendTransaction':\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\taccount: { address },\n\t\t\t\t\ttransaction: await generateBase64Transaction(address),\n\t\t\t\t\tscope: FEATURED_NETWORKS['Solana Mainnet'],\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'signIn':\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\taddress,\n\t\t\t\t\tdomain: window.location.host,\n\t\t\t\t\tstatement: 'Please sign in.',\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'getGenesisHash':\n\t\t\treturn {\n\t\t\t\tparams: {},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n"]}